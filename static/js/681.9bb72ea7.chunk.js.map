{"version":3,"file":"static/js/681.9bb72ea7.chunk.js","mappings":"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","sources":["components/ContactForm/ContactFormStyled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactListStyled.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 500px;\n  padding: 20px;\n  border: 1px solid #454545;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 10px;\n`;\n\nexport const InputName = styled.p`\n  margin: 2px;\n  font-size: 20px;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  height: 30px;\n  margin-top: 15px;\n  border: 1px solid;\n  border-radius: 10px;\n`;\n","export const selectContacts = ({ contacts: { items } }) => items;\nexport const selectFilter = ({ filter }) => filter;\nexport const selectIsLoading = ({ contacts: { isLoading } }) => isLoading;\nexport const selectError = ({ contacts: { error } }) => error;\n\nexport const filteredContacts = ({ contacts: { items }, filter }) => {\n  if (!filter) {\n    return items;\n  }\n  const normalizedFilter = filter.toLowerCase();\n  return items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import { useState } from 'react';\nimport { Form, Label, InputName, Button } from './ContactFormStyled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleChange = evt => {\n    const { name, value } = evt.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (\n      contacts.find(\n        contact =>\n          contact.name.toLowerCase() === name.toLowerCase() ||\n          contact.phone === phone\n      )\n    ) {\n      alert(`${name} or ${phone} is already in contacts.`);\n      return;\n    }\n\n    const newContact = {\n      name,\n      phone,\n    };\n    dispatch(addContact(newContact));\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        <InputName>Name</InputName>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </Label>\n      <Label>\n        <InputName>Number</InputName>\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          value={phone}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterName = styled.p`\n  margin-bottom: 5px;\n  font-size: 20px;\n`;\n","import { FilterName } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  return (\n    <label>\n      <FilterName>Find contacts by name</FilterName>\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={e => dispatch(setFilter(e.currentTarget.value))}\n      ></input>\n    </label>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  margin-left: 10px;\n  border-radius: 5px;\n`;\n","import { Item, Button } from './ContactListStyled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filteredContacts } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const filterList = useSelector(filteredContacts);\n  return (\n    <ul>\n      {filterList.map(filterItem => (\n        <Item key={filterItem.id}>\n          {filterItem.name}: {filterItem.phone}\n          <Button onClick={() => dispatch(deleteContact(filterItem.id))}>\n            Delete\n          </Button>\n        </Item>\n      ))}\n    </ul>\n  );\n};\n","import { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\n// import { Container } from './AppStyled';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { getIsLoggedIn } from 'redux/auth/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Loader } from '../../components/Loader/Loader';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLogin = useSelector(getIsLoggedIn);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    if (isLogin) dispatch(fetchContacts());\n  }, [dispatch, isLogin]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      {isLoading && <Loader />}\n      {error && <p>{error}</p>}\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["Form","styled","Label","InputName","Button","selectContacts","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","filteredContacts","normalizedFilter","toLowerCase","contact","name","includes","ContactForm","useState","setName","phone","setPhone","dispatch","useDispatch","useSelector","handleChange","evt","currentTarget","value","onSubmit","preventDefault","find","alert","newContact","addContact","type","pattern","title","required","onChange","FilterName","Filter","e","setFilter","Item","ContactList","filterList","map","filterItem","onClick","deleteContact","id","isLogin","getIsLoggedIn","useEffect","fetchContacts","Loader"],"sourceRoot":""}